version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aireapp-postgres
    environment:
      POSTGRES_USER: aireapp
      POSTGRES_PASSWORD: aireapp_password
      POSTGRES_DB: aireapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aireapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: aireapp-api
    environment:
      DATABASE_URL: postgresql://aireapp:aireapp_password@postgres:5432/aireapp
      EVENTHUB_CONNECTION_STRING: ${EVENTHUB_CONNECTION_STRING}
      ALLOWED_DEVICES: ${ALLOWED_DEVICES}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: uvicorn src.api.main:create_api --host 0.0.0.0 --port 8000 --factory

  # Dash Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: aireapp-dashboard
    environment:
      DATABASE_URL: postgresql://aireapp:aireapp_password@postgres:5432/aireapp
    ports:
      - "8050:8050"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./static:/app/static
    command: python scripts/start_dashboard.py --host 0.0.0.0 --port 8050

  # IoT Hub Consumer
  iot-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: aireapp-iot-consumer
    environment:
      DATABASE_URL: postgresql://aireapp:aireapp_password@postgres:5432/aireapp
      EVENTHUB_CONNECTION_STRING: ${EVENTHUB_CONNECTION_STRING}
      ALLOWED_DEVICES: ${ALLOWED_DEVICES}
      EVENTHUB_PROXY: ${EVENTHUB_PROXY:-}
      NO_PROXY: ${NO_PROXY:-}
      FORCE_NO_PROXY: ${FORCE_NO_PROXY:-}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: python scripts/start_iot_consumer.py --cg ${CONSUMER_GROUP:-$Default} --from ${START_POSITION:-latest}
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
